performance.cycles.load = 200000

akka {
  //log-config-on-start = on

  loglevel = INFO
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  //  actor {
  //    provider = cluster
  //  }

  # For the sample, just bind to loopback and do not allow access from the network
  # the port is overridden by the logic in main class
  //  remote.artery {
  //    canonical.port = 0
  //    canonical.hostname = 127.0.0.1
  //    transport = tcp
  //    enabled = on
  //  }

  //  cluster {
  //    seed-nodes = [
  //      "akka://ClusterSystem@127.0.0.1:2551",
  //      "akka://ClusterSystem@127.0.0.1:2552"
  //    ]

  # auto downing is NOT safe for production deployments.
  # you may want to use it during development, read more about it in the docs.
  //    auto-down-unreachable-after = 10s

  //  }

  # use Cassandra to store both snapshots and the events of the persistent actors
  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  # for Leval DB
  //  persistence {
  //
  //    journal {
  //      plugin = "akka.persistence.journal.leveldb"
  //      auto-start-journals = ["akka.persistence.journal.leveldb"]
  //    }
  //
  //    snapshot-store {
  //      plugin = "akka.persistence.snapshot-store.local"
  //      auto-start-snapshot-stores = ["akka.persistence.snapshot-store.local"]
  //    }
  //
  //  }
  ###

  ### for JDBC
  //  persistence {
  //    journal {
  //      plugin = "jdbc-journal"
  //      // Enable the line below to automatically start the journal when the actorsystem is started
  //      // auto-start-journals = ["jdbc-journal"]
  //    }
  //    snapshot-store {
  //      plugin = "jdbc-snapshot-store"
  //      // Enable the line below to automatically start the snapshot-store when the actorsystem is started
  //      // auto-start-snapshot-stores = ["jdbc-snapshot-store"]
  //    }
  //  }
  //
  //}

  //jdbc-journal {
  //  slick = ${slick}
  //}

  # the akka-persistence-snapshot-store in use
  //jdbc-snapshot-store {
  //  slick = ${slick}
  //}

  # the akka-persistence-query provider in use
  //jdbc-read-journal {
  //  slick = ${slick}
  //}

  //slick {
  //  profile = "slick.jdbc.PostgresProfile$"
  //  db {
  //    host = "localhost"
  //    url = "jdbc:postgresql://"${slick.db.host}":5432/postgres?reWriteBatchedInserts=true"
  //    user = "postgres"
  //    password = "docker"
  //    driver = "org.postgresql.Driver"
  //    numThreads = 5
  //    maxConnections = 5
  //    minConnections = 1
  //  }
  //}
  #####
}


event-processor {
  id = "event-processor"           // type name of sharded event processor
  keep-alive-interval = 2 seconds  // event-processors ping interval
  tag-prefix = "tag"               // even processor tag prefix
  parallelism = 4                  // number of event processors
}

switch {
  id = "switch-processor"          // type name of sharded write model
  shard-count = 20

}

